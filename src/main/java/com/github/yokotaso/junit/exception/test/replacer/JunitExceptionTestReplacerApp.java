package com.github.yokotaso.junit.exception.test.replacer;

import java.io.BufferedOutputStream;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.OutputStream;

import com.github.yokotaso.junit.exception.test.replacer.commands.CodeModification;
import com.github.yokotaso.junit.exception.test.replacer.commands.CommandExecutable;
import com.github.yokotaso.junit.exception.test.replacer.commands.CommandLineOptions;
import com.github.yokotaso.junit.exception.test.replacer.commands.ExampleCommand;
import com.github.yokotaso.junit.exception.test.replacer.commands.JavaFileModificationCommand;
import com.google.devtools.common.options.OptionsParser;

/*
 * This Java source file was generated by the Gradle 'init' task.
 */
public class JunitExceptionTestReplacerApp {


    public static void main(String[] args) throws Exception {
        OptionsParser parser = OptionsParser.newOptionsParser(CommandLineOptions.class);
        parser.parse(args);
        CommandLineOptions commandLineOptions = parser.getOptions(CommandLineOptions.class);
        CommandExecutable executable = null;

        if (!commandLineOptions.input.equals("")) {
            if (!commandLineOptions.output.equals("")) {
                executable = new JavaFileModificationCommand();
                try (InputStream inputStream = new FileInputStream(commandLineOptions.input)) {
                    CodeModification codeModification = executable.invokeCodeModification(inputStream);
                    try (OutputStream outputStream = new FileOutputStream(commandLineOptions.output)) {
                        executable.invokeApplyCodeModification(outputStream, codeModification);
                    }
                }
            } else {
                try (InputStream inputStream = new FileInputStream(commandLineOptions.input)) {
                    CodeModification codeModification = executable.invokeCodeModification(inputStream);
                    try (OutputStream outputStream = new BufferedOutputStream(System.out)) {
                        executable.invokeApplyCodeModification(outputStream, codeModification);
                    }
                }
            }
            return;
        }

        if (commandLineOptions.example) {
            executable = new ExampleCommand();
            executable.invokeCodeModification(null);
        }
    }
}
